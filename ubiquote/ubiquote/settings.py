"""
Django settings for ubiquote project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
from django.core.management.utils import get_random_secret_key
from django.utils.translation import gettext_lazy as _
from datetime import timedelta

# Load environments variables
load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', default=get_random_secret_key())
# SECRET_KEY = 'django-insecure-5rpw=u-c9tsi$eye#i=qxin!c590x9%lxa6$z@-8fs3ruc-gs5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '').split(',')

# Application definition

INSTALLED_APPS = [
    'modeltranslation',        
    'dal', # override the jquery.init.js script provided by the admin
    'dal_select2',
    # 'ubiquote.management',
    # 'autocomplete_light',  
   
   
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # 'django_elasticsearch_dsl',
    'django.contrib.postgres',    
    
  
    
    # 'texts.apps.TextsConfig',
    # 'texts.quotes.apps.TextsConfig',    
    'texts',    
    'texts.quotes',    
    'persons',
    'persons.users',
    'persons.authors',
    
    
    'corsheaders',    
    'api',
    'rest_framework',
    'rest_framework_simplejwt',
        
    # 'interactions.likes',  
    # 'interactions.follows',
    'django_htmx',    
    'rosetta', # managing translations in admin
    
    'debug_toolbar'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',    
    'django.middleware.security.SecurityMiddleware', 
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',

    # 'modeltranslation.middleware.TranslationMiddleware',     
   
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    

    
    'debug_toolbar.middleware.DebugToolbarMiddleware',    
    'django_htmx.middleware.HtmxMiddleware'
]

ROOT_URLCONF = 'ubiquote.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n', 
            ],
        },
    },
]

WSGI_APPLICATION = 'ubiquote.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases



DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get('DATABASES_NAME'),
        'USER': os.environ.get('DATABASES_USER'),
        'PASSWORD': os.environ.get('DATABASES_PASSWORD'),
        'HOST': os.environ.get('DATABASES_HOST'),
        'PORT': os.environ.get('DATABASES_PORT'),
        
        'TEST': {
            'NAME': 'test_ubiquote_db',
        },        
    }
}

# TESTING = True
# TEST_DATABASES = {}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# DATETIME_INPUT_FORMATS = ['%Y-%m-%d']

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

# For debug tool
INTERNAL_IPS = [
    '127.0.0.1',
]

# Absolute filesystem path to the directory that will hold collectstatic files.
STATIC_ROOT = BASE_DIR / "static"

STATICFILES_DIRS = [
    # BASE_DIR / "static/custom/",
    BASE_DIR / "static/img_generator/",    
    ]


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DEFAULT_PAGINATION = 10  # Define your default pagination value here

# ELASTICSEARCH_DSL = {
#     'default': {
#         'hosts': 'https://localhost:9200',
#         'verify_certs': False,
#         'http_auth': (os.environ.get('ELASTICSEARCH_USERNAME'), os.environ.get('ELASTICSEARCH_PASSWORD')),          
#     },
# }



LANGUAGES = (
    ('en', _('English')),
    ('fr', _('French')),
    # ('es', _('Spanish')),    
)

MODELTRANSLATION_LANGUAGES = ('en', 'fr',)
MODELTRANSLATION_DEFAULT_LANGUAGE = 'en'

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale/'),  
)

AUTH_USER_MODEL = 'users.User'

LOGIN_URL = "/login/"
LOGIN_REDIRECT_URL = 'texts:get-home'
LOGOUT_REDIRECT_URL = 'texts:get-home'

ROOT_URL = "http://127.0.0.1:8000/"
API_URL = "http://127.0.0.1:8000/api/"


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# to disable the security when you want to proceed more than 1000 operations at once (delete all authors...)
# DATA_UPLOAD_MAX_NUMBER_FIELDS = 2500


CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:8000",
    "http://localhost:8000",
    # others
]


REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,  # Adjust this to your desired number of items per page
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',       
        # 'rest_framework.authentication.TokenAuthentication',  
        # 'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',        
    ),    
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',  # Or AllowAny
    ),    
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),  # Set a duration for access tokens
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),  # days=1 / Set a duration for refresh tokens
    'ROTATE_REFRESH_TOKENS': True,  # Optional: rotate refresh tokens on usage
    'BLACKLIST_AFTER_ROTATION': True,  # Optional: blacklist old tokens after rotation
}